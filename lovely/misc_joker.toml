[manifest]
version = "1.0.0"
dump_lua = true
priority = -1

# LeBaron James - Calculate Steel effects when played
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if context.cardarea == G.hand and context.main_scoring then"
position = "at"
payload = "if (context.cardarea == G.hand or context.cardarea == G.play and next(SMODS.find_card('j_cry_lebaron_james')) and Cryptid.safe_get(SMODS.Ranks,Cryptid.safe_get(card,'base','value') or 'm','key') == 'King') and context.main_scoring then"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "ret.playing_card = {}"
position = "at"
payload = "ret.playing_card = ret.playing_card or {}"
match_indent = true

# *all* of this is for just paved jonkler
[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = '''for i=1, #hand do
        if hand[i]:is_suit(suit, nil, true) then flush_count = flush_count + 1;  t[#t+1] = hand[i] end'''
position = "after"
payload = "if (next(find_joker('cry-paved')) and SMODS.has_enhancement(hand[i], 'm_stone')) then flush_count = flush_count + 1;  t[#t+1] = hand[i]; end"
match_indent = true

[[patches]]
[patches.pattern]
target = "[SMODS _ 'src/overrides.lua']"
pattern = "min_length = min_length or 5
    if min_length < 2 then min_length = 2 end
    if #hand < min_length then return {} end
    local ranks = {}"
position = "after"
payload = "local pavedcounter = 0; for i=1, #find_joker('cry-paved') do pavedcounter = pavedcounter + 1 end; local stonedcounter = 0"
match_indent = true

[[patches]]
[patches.pattern]
target = "[SMODS _ 'src/overrides.lua']"
pattern = '''local id = card:get_id()'''
position = "after"
payload = "if SMODS.has_enhancement(card, 'm_stone') then stonedcounter = stonedcounter + 1; "
match_indent = true
# NOT FINISHED
